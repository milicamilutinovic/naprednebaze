@model app.Models.User
@{
    ViewData["Title"] = "Home";
    var userName = User.Identity.IsAuthenticated ? User.Identity.Name : null;
    var loggedInUserId = User.Identity.IsAuthenticated
        ? User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value
        : null;
}

<h1 class="text-center my-5">
    @if (!string.IsNullOrEmpty(userName))
    {
        @($"Welcome, {userName}!")
    }
    else
    {
        @("Welcome to My Application")
    }
</h1>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/Home/Index">App</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                @if (User.Identity.IsAuthenticated)
                {
                    <!-- Dugme za UserPage -->
                    <li class="nav-item">
                        <a class="btn btn-primary" href="/User/UserPage" role="button">Go to User Page</a>
                    </li>

                    <!-- Dugme za Logout -->
                    <li class="nav-item">
                        <form method="post" action="/Account/Logout" class="d-inline">
                            <button type="submit" class="btn btn-danger">Logout</button>
                        </form>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/Account/Login">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/Account/Register">Register</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

<div class="container mt-5">
    <h2>All Users</h2>
    <ul id="user-list" class="list-group">
        <!-- Dinamički lista korisnika će biti dodata ovde -->
    </ul>
</div>

<footer class="footer bg-dark text-white text-center py-3 mt-5">
    <div class="container">
        &copy; 2024 My Application - <a href="/Home/Privacy" class="text-white">Privacy</a>
    </div>
</footer>

<div class="container mt-5">
    <h2>All Users</h2>
    <ul id="user-list" class="list-group">
        <!-- Users will be dynamically added here -->
    </ul>
</div>

<script>
    // Fetch the logged-in user's ID from Razor
    const loggedInUserId = '@loggedInUserId';

            async function fetchUsers() {
        try {
            const response = await fetch(`/User/AllUsers?loggedInUserId=${loggedInUserId}`);
            if (!response.ok) {
                throw new Error('Failed to fetch users');
            }

            const users = await response.json();
            const userList = document.getElementById('user-list');

            // Dinamički dodaj korisnike u listu
            users.forEach(user => {
                const listItem = document.createElement('li');
                listItem.className = 'list-group-item';

                // Kreiranje linka ka stranici korisnika
                const userLink = document.createElement('a');
                userLink.href = `/User/UserPage?username=${user.username}`;  // Prosleđivanje username kao parametar
                userLink.textContent = `${user.fullName} (${user.email})`;
                userLink.className = 'text-decoration-none text-dark';

                // Dodavanje event listener-a da preusmeri korisnika na njegovu stranicu
                userLink.addEventListener('click', (event) => {
                    event.preventDefault(); // Sprečava default ponašanje linka
                    window.location.href = `/User/UserPage/${user.username}`; // Redirektuje na korisničku stranicu sa username-om
                });

                listItem.appendChild(userLink);
                userList.appendChild(listItem);
            });
        } catch (error) {
            console.error('Error fetching users:', error);
        }
    }



    // Fetch users when the page loads
    window.onload = fetchUsers;
</script>
